(function() {var implementors = {};
implementors["byteorder"] = [{"text":"impl Ord for BigEndian","synthetic":false,"types":[]},{"text":"impl Ord for LittleEndian","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T:&nbsp;?Sized + Pointable, '_&gt; Ord for Shared&lt;'_, T&gt;","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L:&nbsp;Ord, R:&nbsp;Ord&gt; Ord for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["filetime"] = [{"text":"impl Ord for FileTime","synthetic":false,"types":[]}];
implementors["gnuplot"] = [{"text":"impl Ord for XAxis","synthetic":false,"types":[]},{"text":"impl Ord for YAxis","synthetic":false,"types":[]},{"text":"impl Ord for FillRegionType","synthetic":false,"types":[]},{"text":"impl Ord for AlignType","synthetic":false,"types":[]},{"text":"impl Ord for DashType","synthetic":false,"types":[]},{"text":"impl Ord for ArrowheadType","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Ord&gt; Ord for AutoOption&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Ord, S:&nbsp;Ord&gt; Ord for Tick&lt;T, S&gt;","synthetic":false,"types":[]},{"text":"impl Ord for BorderLocation2D","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Ord&gt; Ord for LegendOption&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Ord for ContourStyle","synthetic":false,"types":[]},{"text":"impl Ord for GnuplotVersion","synthetic":false,"types":[]},{"text":"impl Ord for FillPatternType","synthetic":false,"types":[]},{"text":"impl Ord for MultiplotFillOrder","synthetic":false,"types":[]},{"text":"impl Ord for MultiplotFillDirection","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Ord for Span","synthetic":false,"types":[]},{"text":"impl Ord for Position","synthetic":false,"types":[]},{"text":"impl Ord for Literal","synthetic":false,"types":[]},{"text":"impl Ord for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl Ord for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl Ord for Utf8Sequence","synthetic":false,"types":[]},{"text":"impl Ord for Utf8Range","synthetic":false,"types":[]}];
implementors["time"] = [{"text":"impl Ord for Duration","synthetic":false,"types":[]},{"text":"impl Ord for Timespec","synthetic":false,"types":[]},{"text":"impl Ord for SteadyTime","synthetic":false,"types":[]},{"text":"impl Ord for Tm","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()