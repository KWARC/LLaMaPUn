(function() {var implementors = {};
implementors["llamapun"] = [{"text":"impl RefUnwindSafe for LexicalOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RESOURCE_DOCUMENTS","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructuralEnv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmsEnv","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Corpus","synthetic":true,"types":[]},{"text":"impl&lt;'iter&gt; !RefUnwindSafe for DocumentIterator&lt;'iter&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; !RefUnwindSafe for Document&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'iter&gt; !RefUnwindSafe for ParagraphIterator&lt;'iter&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'p&gt; !RefUnwindSafe for Paragraph&lt;'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'iter&gt; !RefUnwindSafe for SentenceIterator&lt;'iter&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; !RefUnwindSafe for Sentence&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'iter&gt; !RefUnwindSafe for SimpleWordIterator&lt;'iter&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'iter&gt; !RefUnwindSafe for SennaWordIterator&lt;'iter&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'w&gt; !RefUnwindSafe for Word&lt;'w&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DNMParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RuntimeParseData","synthetic":true,"types":[]},{"text":"impl&lt;'dnmrange&gt; RefUnwindSafe for DNMRange&lt;'dnmrange&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DNM","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecialTagsOption","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dictionary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ngrams","synthetic":true,"types":[]},{"text":"impl&lt;'p&gt; !RefUnwindSafe for ItemDNM&lt;'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; !RefUnwindSafe for ItemDNMRange&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'iter&gt; !RefUnwindSafe for RoNodeIterator&lt;'iter&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'iter&gt; !RefUnwindSafe for DNMRangeIterator&lt;'iter&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Corpus","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; !RefUnwindSafe for Document&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MathMarker","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatternFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatternMarker","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for TextMarker&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for MarkerEnum&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Tokenizer","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()